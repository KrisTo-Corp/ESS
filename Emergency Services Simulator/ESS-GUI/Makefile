#############################################################################
# Makefile for building: ESS-GUI
# Generated by qmake (2.01a) (Qt 4.8.3) on: Wed Jun 12 17:16:58 2013
# Project:  ESS-GUI.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile ESS-GUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtWebKit -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		xmlparser.cpp \
		Vehicles.cpp \
		tinyxmlparser.cpp \
		tinyxmlerror.cpp \
		tinyxml.cpp \
		tinystr.cpp \
		Structures.cpp \
		Simulator.cpp \
		Roads.cpp \
		OutputObject.cpp \
		Matrix.cpp \
		helpers.cpp \
		Coordinate.cpp \
		CityObjects.cpp \
		City.cpp \
		Casualty.cpp moc_mainwindow.cpp
OBJECTS       = main.o \
		mainwindow.o \
		xmlparser.o \
		Vehicles.o \
		tinyxmlparser.o \
		tinyxmlerror.o \
		tinyxml.o \
		tinystr.o \
		Structures.o \
		Simulator.o \
		Roads.o \
		OutputObject.o \
		Matrix.o \
		helpers.o \
		Coordinate.o \
		CityObjects.o \
		City.o \
		Casualty.o \
		moc_mainwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		ESS-GUI.pro
QMAKE_TARGET  = ESS-GUI
DESTDIR       = 
TARGET        = ESS-GUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ESS-GUI.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtWebKit.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile ESS-GUI.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtWebKit.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile ESS-GUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ESS-GUI1.0.0 || $(MKDIR) .tmp/ESS-GUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ESS-GUI1.0.0/ && $(COPY_FILE) --parents mainwindow.h xmlparser.h Vehicles.h tinyxml.h tinystr.h Structures.h Simulator.h Roads.h OutputObject.h Matrix.h helpers.h DesignByContract.h Coordinate.h CityObjects.h City.h Casualty.h .tmp/ESS-GUI1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp xmlparser.cpp Vehicles.cpp tinyxmlparser.cpp tinyxmlerror.cpp tinyxml.cpp tinystr.cpp Structures.cpp Simulator.cpp Roads.cpp OutputObject.cpp Matrix.cpp helpers.cpp Coordinate.cpp CityObjects.cpp City.cpp Casualty.cpp .tmp/ESS-GUI1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/ESS-GUI1.0.0/ && (cd `dirname .tmp/ESS-GUI1.0.0` && $(TAR) ESS-GUI1.0.0.tar ESS-GUI1.0.0 && $(COMPRESS) ESS-GUI1.0.0.tar) && $(MOVE) `dirname .tmp/ESS-GUI1.0.0`/ESS-GUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ESS-GUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp
moc_mainwindow.cpp: City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h \
		ui_mainwindow.h \
		Simulator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

xmlparser.o: xmlparser.cpp xmlparser.h \
		City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h \
		tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlparser.o xmlparser.cpp

Vehicles.o: Vehicles.cpp Vehicles.h \
		Coordinate.h \
		DesignByContract.h \
		Structures.h \
		CityObjects.h \
		Casualty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vehicles.o Vehicles.cpp

tinyxmlparser.o: tinyxmlparser.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tinyxmlparser.o tinyxmlparser.cpp

tinyxmlerror.o: tinyxmlerror.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tinyxmlerror.o tinyxmlerror.cpp

tinyxml.o: tinyxml.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tinyxml.o tinyxml.cpp

tinystr.o: tinystr.cpp tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tinystr.o tinystr.cpp

Structures.o: Structures.cpp Structures.h \
		Vehicles.h \
		Coordinate.h \
		DesignByContract.h \
		Casualty.h \
		CityObjects.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Structures.o Structures.cpp

Simulator.o: Simulator.cpp Simulator.h \
		City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Simulator.o Simulator.cpp

Roads.o: Roads.cpp Roads.h \
		Coordinate.h \
		DesignByContract.h \
		CityObjects.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Roads.o Roads.cpp

OutputObject.o: OutputObject.cpp OutputObject.h \
		DesignByContract.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OutputObject.o OutputObject.cpp

Matrix.o: Matrix.cpp Matrix.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		OutputObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Matrix.o Matrix.cpp

helpers.o: helpers.cpp helpers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpers.o helpers.cpp

Coordinate.o: Coordinate.cpp Coordinate.h \
		DesignByContract.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Coordinate.o Coordinate.cpp

CityObjects.o: CityObjects.cpp CityObjects.h \
		DesignByContract.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CityObjects.o CityObjects.cpp

City.o: City.cpp City.h \
		helpers.h \
		CityObjects.h \
		DesignByContract.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		Casualty.h \
		Roads.h \
		Matrix.h \
		OutputObject.h \
		xmlparser.h \
		tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o City.o City.cpp

Casualty.o: Casualty.cpp Casualty.h \
		Structures.h \
		Vehicles.h \
		Coordinate.h \
		DesignByContract.h \
		CityObjects.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Casualty.o Casualty.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

